const o={format(n,t=8){if(/\./.test(n)){let e=/\.(\d*)?/.exec(n);return e&&e.length&&(e=e[1]),e&&e.length>=t?n.split(".")[0]+"."+e.substring(0,t):n}else return n},check(n){const{val:t,oldVal:e,maxVal:f,callback:i,decimals:s,minVal:a}=n;try{if(typeof f<"u"&&t.cmp(f)>0)return i(f);if(typeof a<"u"&&t.cmp(a)<0)return i(a);if(t!==e&&t){const r=t.plus("0");if(r==="NaN")return i(e);let l=s;(typeof s>"u"||isNaN(parseInt(s)))&&(l=8);const c=this.format(r,l);i(c!==r?c:this.format(t,l))}}catch(r){i(e)}}};export{o as a};
